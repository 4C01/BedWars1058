name: Deploy with Maven

on:
  push:
    branches: 
      - master
      - xp

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '19.0.2+7'
          distribution: 'adopt'
      - name: Package with Maven
        env:
          MVN_REPO_USER: ${{ secrets.MVN_REPO_USER }}
          MVN_REPO_PASS: ${{ secrets.MVN_REPO_PASS }}
          ANDEV_API_TOKEN: ${{ secrets.ANDEV_API_TOKEN }}
          J_DOCS_USER: ${{ secrets.J_DOCS_USER }}
          J_DOCS_PASS: ${{ secrets.J_DOCS_PASS }}
          POLY_API_KEY: ${{ secrets.POLY_API_KEY }}
        run: |
          sudo apt install jq -y
          curl -X GET https://api.andrei1058.dev/v1/resources/1/versioning/candidate -H "Accept: application/json" >> version.json
          export UPDATE_VERSION=`jq '.version' version.json | tr -d '"'`
          mvn versions:set -DnewVersion=$UPDATE_VERSION
          mvn versions:update-child-modules
          mvn clean package -s ci_settings.xml
          echo "UPDATE_VERSION=$UPDATE_VERSION" >> $GITHUB_ENV
      - name: Upload JAR to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: target/
          server-dir: 4C01/Bedwars1058/
      - name: Create Tag
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          name: ${{env.UPDATE_VERSION}}
          tag_name: ${{env.UPDATE_VERSION}}
